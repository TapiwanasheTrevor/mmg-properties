"use strict";exports.id=8,exports.ids=[8],exports.modules={19008:(t,r,e)=>{e.d(r,{fj:()=>c,getLease:()=>i,rV:()=>l});var a=e(76),n=e(20902),o=e(25816);let s=(0,a.hJ)(n.db,"leases"),i=async t=>{try{let r=(0,a.JU)(n.db,"leases",t),e=await (0,a.QT)(r);if(e.exists())return{id:e.id,...e.data()};return null}catch(t){throw console.error("Error getting lease:",t),t}},c=async t=>{try{let r=await i(t);if(!r)throw Error("Lease not found");"active"===r.status&&await (0,o.hk)(r.tenantId);let e=(0,a.JU)(n.db,"leases",t);await (0,a.oe)(e)}catch(t){throw console.error("Error deleting lease:",t),t}},l=async(t={})=>{try{let r=(0,a.IO)(s);t.tenantId&&(r=(0,a.IO)(r,(0,a.ar)("tenantId","==",t.tenantId))),t.unitId&&(r=(0,a.IO)(r,(0,a.ar)("unitId","==",t.unitId))),t.propertyId&&(r=(0,a.IO)(r,(0,a.ar)("propertyId","==",t.propertyId))),t.status&&(r=(0,a.IO)(r,(0,a.ar)("status","==",t.status))),r=(0,a.IO)(r,(0,a.Xo)("createdAt","desc")),t.pageSize&&(r=(0,a.IO)(r,(0,a.b9)(t.pageSize)));let e=await (0,a.PL)(r),n=[];return e.forEach(t=>{n.push({id:t.id,...t.data()})}),{leases:n,hasMore:e.docs.length===(t.pageSize||0)}}catch(t){throw console.error("Error getting leases:",t),t}}},25816:(t,r,e)=>{e.d(r,{yO:()=>p,ax:()=>y,hk:()=>I,BF:()=>g});var a=e(76),n=e(20902);e(11552);var o=e(54041);let s=(0,a.hJ)(n.db,"units"),i=async t=>{try{let r=(0,a.JU)(n.db,"units",t),e=await (0,a.QT)(r);if(e.exists())return{id:e.id,...e.data()};return null}catch(t){throw console.error("Error getting unit:",t),t}},c=async t=>{try{let r=(0,a.IO)(s,(0,a.ar)("propertyId","==",t),(0,a.Xo)("label")),e=await (0,a.PL)(r),n=[];return e.forEach(t=>{n.push({id:t.id,...t.data()})}),n}catch(t){throw console.error("Error getting units by property:",t),t}},l=async(t,r,e)=>{try{let o=(0,a.JU)(n.db,"units",t),s={currentTenantId:r,currentLeaseId:e,status:r?"occupied":"vacant",updatedAt:(0,a.Bt)()};await (0,a.r7)(o,s);let c=await i(t);c&&await d(c.propertyId)}catch(t){throw console.error("Error updating unit tenant:",t),t}},d=async t=>{try{let r=await c(t),e=r.filter(t=>"occupied"===t.status).length;await (0,o.zI)(t,r.length,e)}catch(t){throw console.error("Error updating property occupancy stats:",t),t}},u=(0,a.hJ)(n.db,"tenants"),h=async t=>{try{let r=(0,a.JU)(n.db,"tenants",t),e=await (0,a.QT)(r);if(e.exists())return{id:e.id,...e.data()};return null}catch(t){throw console.error("Error getting tenant:",t),t}},w=async(t,r)=>{try{let e=(0,a.JU)(n.db,"tenants",t);await (0,a.r7)(e,r)}catch(t){throw console.error("Error updating tenant:",t),t}},p=async t=>{try{let r=await h(t);if(!r)throw Error("Tenant not found");r.currentUnit&&await l(r.currentUnit,null,null);let e=(0,a.JU)(n.db,"tenants",t);await (0,a.oe)(e)}catch(t){throw console.error("Error deleting tenant:",t),t}},y=async(t={})=>{try{let r=(0,a.IO)(u);t.status&&(r=(0,a.IO)(r,(0,a.ar)("status","==",t.status))),r=(0,a.IO)(r,(0,a.Xo)("createdAt","desc")),t.pageSize&&(r=(0,a.IO)(r,(0,a.b9)(t.pageSize))),t.lastDoc&&(r=(0,a.IO)(r,(0,a.TQ)(t.lastDoc)));let e=await (0,a.PL)(r),n=[];e.forEach(t=>{n.push({id:t.id,...t.data()})});let o=n;if(t.searchTerm){let r=t.searchTerm.toLowerCase();o=n.filter(t=>t.personalInfo.idNumber.toLowerCase().includes(r)||t.personalInfo.occupation.toLowerCase().includes(r)||t.personalInfo.emergencyContact.name.toLowerCase().includes(r))}return t.propertyId,{tenants:o,lastDoc:e.docs[e.docs.length-1],hasMore:e.docs.length===(t.pageSize||0)}}catch(t){throw console.error("Error getting tenants:",t),t}},g=async(t,r=10)=>{try{let e=await y({pageSize:100}),a=t.toLowerCase();return e.tenants.filter(t=>t.personalInfo.idNumber.toLowerCase().includes(a)||t.personalInfo.occupation.toLowerCase().includes(a)||t.personalInfo.emergencyContact.name.toLowerCase().includes(a)).slice(0,r)}catch(t){throw console.error("Error searching tenants:",t),t}},I=async t=>{try{let r=await h(t);if(!r||!r.currentUnit)throw Error("Tenant not found or not assigned to a unit");await w(t,{currentUnit:void 0,status:"former"}),await l(r.currentUnit,null,null)}catch(t){throw console.error("Error removing tenant from unit:",t),t}}}};