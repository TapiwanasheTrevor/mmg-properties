"use strict";exports.id=546,exports.ids=[546],exports.modules={85546:(e,t,r)=>{r.d(t,{eD:()=>c,getAssignedRequests:()=>y,getOverdueRequests:()=>p,getPendingRequests:()=>g,hm:()=>o,ty:()=>d});var a=r(76),s=r(20902);let n=(0,a.hJ)(s.db,"maintenanceRequests"),i=async(e,t)=>{try{let r=(0,a.JU)(s.db,"maintenanceRequests",e);await (0,a.r7)(r,t)}catch(e){throw console.error("Error updating maintenance request:",e),e}},o=async e=>{try{let t=(0,a.JU)(s.db,"maintenanceRequests",e);await (0,a.oe)(t)}catch(e){throw console.error("Error deleting maintenance request:",e),e}},c=async(e={})=>{try{let t=(0,a.IO)(n);e.status&&(t=(0,a.IO)(t,(0,a.ar)("status","==",e.status))),e.priority&&(t=(0,a.IO)(t,(0,a.ar)("priority","==",e.priority))),e.category&&(t=(0,a.IO)(t,(0,a.ar)("category","==",e.category))),e.type&&(t=(0,a.IO)(t,(0,a.ar)("type","==",e.type))),e.propertyId&&(t=(0,a.IO)(t,(0,a.ar)("propertyId","==",e.propertyId))),e.unitId&&(t=(0,a.IO)(t,(0,a.ar)("unitId","==",e.unitId))),e.submittedBy&&(t=(0,a.IO)(t,(0,a.ar)("submittedBy","==",e.submittedBy))),e.assignedTo&&(t=(0,a.IO)(t,(0,a.ar)("assignedTo","==",e.assignedTo))),t=(0,a.IO)(t,(0,a.Xo)("createdAt","desc")),e.pageSize&&(t=(0,a.IO)(t,(0,a.b9)(e.pageSize))),e.lastDoc&&(t=(0,a.IO)(t,(0,a.TQ)(e.lastDoc)));let r=await (0,a.PL)(t),s=[];return r.forEach(e=>{s.push({id:e.id,...e.data()})}),{requests:s,lastDoc:r.docs[r.docs.length-1],hasMore:r.docs.length===(e.pageSize||0)}}catch(e){throw console.error("Error getting maintenance requests:",e),e}},d=async(e,t,r)=>{try{let s={status:t,...r};"completed"===t&&(s.completedAt=(0,a.Bt)()),await i(e,s)}catch(e){throw console.error("Error updating maintenance request status:",e),e}},u=async e=>(await c({status:e})).requests,g=async()=>u("pending"),y=async e=>(await c({assignedTo:e})).requests,p=async()=>{try{let e=await u("assigned"),t=await u("in_progress"),r=[...e,...t],a=new Date;return r.filter(e=>{if(!e.assignedAt)return!1;let t=e.assignedAt.toDate(),r=(a.getTime()-t.getTime())/36e5,s="emergency"===e.priority?4:"high"===e.priority?48:72;return r>s})}catch(e){throw console.error("Error getting overdue requests:",e),e}}}};