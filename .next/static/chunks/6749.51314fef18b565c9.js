"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[6749],{66749:function(e,t,r){r.d(t,{eD:function(){return c},getAssignedRequests:function(){return y},getOverdueRequests:function(){return p},getPendingRequests:function(){return g},hm:function(){return o},ty:function(){return u}});var n=r(5978),a=r(17293);let s=(0,n.hJ)(a.db,"maintenanceRequests"),i=async(e,t)=>{try{let r=(0,n.JU)(a.db,"maintenanceRequests",e);await (0,n.r7)(r,t)}catch(e){throw console.error("Error updating maintenance request:",e),e}},o=async e=>{try{let t=(0,n.JU)(a.db,"maintenanceRequests",e);await (0,n.oe)(t)}catch(e){throw console.error("Error deleting maintenance request:",e),e}},c=async function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};try{let t=(0,n.IO)(s);e.status&&(t=(0,n.IO)(t,(0,n.ar)("status","==",e.status))),e.priority&&(t=(0,n.IO)(t,(0,n.ar)("priority","==",e.priority))),e.category&&(t=(0,n.IO)(t,(0,n.ar)("category","==",e.category))),e.type&&(t=(0,n.IO)(t,(0,n.ar)("type","==",e.type))),e.propertyId&&(t=(0,n.IO)(t,(0,n.ar)("propertyId","==",e.propertyId))),e.unitId&&(t=(0,n.IO)(t,(0,n.ar)("unitId","==",e.unitId))),e.submittedBy&&(t=(0,n.IO)(t,(0,n.ar)("submittedBy","==",e.submittedBy))),e.assignedTo&&(t=(0,n.IO)(t,(0,n.ar)("assignedTo","==",e.assignedTo))),t=(0,n.IO)(t,(0,n.Xo)("createdAt","desc")),e.pageSize&&(t=(0,n.IO)(t,(0,n.b9)(e.pageSize))),e.lastDoc&&(t=(0,n.IO)(t,(0,n.TQ)(e.lastDoc)));let r=await (0,n.PL)(t),a=[];return r.forEach(e=>{a.push({id:e.id,...e.data()})}),{requests:a,lastDoc:r.docs[r.docs.length-1],hasMore:r.docs.length===(e.pageSize||0)}}catch(e){throw console.error("Error getting maintenance requests:",e),e}},u=async(e,t,r)=>{try{let a={status:t,...r};"completed"===t&&(a.completedAt=(0,n.Bt)()),await i(e,a)}catch(e){throw console.error("Error updating maintenance request status:",e),e}},d=async e=>(await c({status:e})).requests,g=async()=>d("pending"),y=async e=>(await c({assignedTo:e})).requests,p=async()=>{try{let e=await d("assigned"),t=await d("in_progress"),r=[...e,...t],n=new Date;return r.filter(e=>{if(!e.assignedAt)return!1;let t=e.assignedAt.toDate(),r=(n.getTime()-t.getTime())/36e5,a="emergency"===e.priority?4:"high"===e.priority?48:72;return r>a})}catch(e){throw console.error("Error getting overdue requests:",e),e}}}}]);